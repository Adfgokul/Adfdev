{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bigdatalabdatafactory17"
		},
		"webactadls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'webactadls'"
		},
		"AzureSqlDatabasechicago_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabasechicago'"
		},
		"AzureDataLakeStoragezip_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStoragezip'"
		},
		"BlobStorageOutput_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorageOutput'"
		},
		"FileServer1zip_ls_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1zip_ls'"
		},
		"OnPremServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremServer'"
		},
		"HttpServer_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"webactadls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfgokuladls.dfs.core.windows.net/"
		},
		"AzureDataLakeStoragezip_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfgokuladls.dfs.core.windows.net/"
		},
		"FileServer1zip_ls_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\aadf-vm\\Data"
		},
		"FileServer1zip_ls_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "developer"
		},
		"OnPremServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\aadf-vm\\Data"
		},
		"OnPremServer_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "developer"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/webactadls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('webactadls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('webactadls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bigdatagateway-adftraining')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabasechicago')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabasechicago_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Jsonchallenge3_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvforsourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "webactadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "chicagodata.csv",
						"folderPath": "webdata",
						"fileSystem": "sample-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "case_number",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "block",
						"type": "String"
					},
					{
						"name": "iucr",
						"type": "String"
					},
					{
						"name": "primary_type",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "location_description",
						"type": "String"
					},
					{
						"name": "arrest",
						"type": "String"
					},
					{
						"name": "domestic",
						"type": "String"
					},
					{
						"name": "beat",
						"type": "String"
					},
					{
						"name": "district",
						"type": "String"
					},
					{
						"name": "ward",
						"type": "String"
					},
					{
						"name": "community_area",
						"type": "String"
					},
					{
						"name": "fbi_code",
						"type": "String"
					},
					{
						"name": "x_coordinate",
						"type": "String"
					},
					{
						"name": "y_coordinate",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "updated_on",
						"type": "String"
					},
					{
						"name": "latitude",
						"type": "String"
					},
					{
						"name": "longitude",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/webactadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/targetwebDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "webactadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "chicagodata.csv",
						"folderPath": "webdata",
						"fileSystem": "sample-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/webactadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoragezip')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStoragezip_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStoragezip_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "bigdatagateway-adftraining",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/bigdatagateway-adftraining')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorageOutput')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorageOutput_connectionString')]"
				},
				"connectVia": {
					"referenceName": "bigdatagateway-adftraining",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/bigdatagateway-adftraining')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1zip_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1zip_ls_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1zip_ls_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1zip_ls_password')]"
					}
				},
				"connectVia": {
					"referenceName": "bigdatagateway-adftraining",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/bigdatagateway-adftraining')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('OnPremServer_properties_typeProperties_host')]",
					"userId": "[parameters('OnPremServer_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "bigdatagateway-adftraining",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/bigdatagateway-adftraining')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldbwebDSchicago')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabasechicago",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "2022CrimeData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabasechicago')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinarydestzipDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragezip",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "sample-data"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragezip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binaryzip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1zip_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "sampledata.zip"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1zip_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_yw8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorageOutput",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_folderPath": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FlightsAndWeather.csv",
						"folderPath": {
							"value": "@dataset().cw_folderPath",
							"type": "Expression"
						},
						"container": "sparkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorageOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_yw8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "FlightsAndWeather"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OriginAirportCode",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "DayofMonth",
						"type": "String"
					},
					{
						"name": "CRSDepHour",
						"type": "String"
					},
					{
						"name": "DayOfWeek",
						"type": "String"
					},
					{
						"name": "Carrier",
						"type": "String"
					},
					{
						"name": "DestAirportCode",
						"type": "String"
					},
					{
						"name": "DepDel15",
						"type": "String"
					},
					{
						"name": "WindSpeed",
						"type": "String"
					},
					{
						"name": "SeaLevelPressure",
						"type": "String"
					},
					{
						"name": "HourlyPrecip",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowchallengeweb')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csvforsourceDS",
								"type": "DatasetReference"
							},
							"name": "sourcefromadls"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sqldbwebDSchicago",
								"type": "DatasetReference"
							},
							"name": "sinkweb"
						}
					],
					"transformations": [
						{
							"name": "derivedColumnweb"
						},
						{
							"name": "aggregateweb"
						},
						{
							"name": "filterforyear"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          case_number as string,",
						"          date as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss',",
						"          block as string,",
						"          iucr as string,",
						"          primary_type as string,",
						"          description as string,",
						"          location_description as string,",
						"          arrest as string,",
						"          domestic as string,",
						"          beat as string,",
						"          district as string,",
						"          ward as string,",
						"          community_area as string,",
						"          fbi_code as string,",
						"          x_coordinate as string,",
						"          y_coordinate as string,",
						"          year as string,",
						"          updated_on as string,",
						"          latitude as string,",
						"          longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourcefromadls",
						"sourcefromadls derive(Date = toString(date,'yyyy-MM-dd'),",
						"          time = toString(date, 'HH:mm:ss.sss')) ~> derivedColumnweb",
						"derivedColumnweb aggregate(groupBy(iucr,",
						"          year,",
						"          derivedColumnweb@Date,",
						"          time,",
						"          DayOfWeek = dayOfWeek(sourcefromadls@date)),",
						"     CountOfIUCR = count(iucr)) ~> aggregateweb",
						"aggregateweb filter(year=='2022') ~> filterforyear",
						"filterforyear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkweb"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvforsourceDS')]",
				"[concat(variables('factoryId'), '/datasets/sqldbwebDSchicago')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyOnPrem2AzurePipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline copies time-sliced CSV files from on-premises C:\\\\Data to Azure Blob Storage as a continuous job",
				"activities": [
					{
						"name": "Copy_yw8",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "FlightsAndWeather/"
							},
							{
								"name": "Destination",
								"value": "sparkcontainer/FlightsAndWeather/@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/FlightsAndWeather.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 10,
							"enableSkipIncompatibleRow": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_yw8",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_yw8",
								"type": "DatasetReference",
								"parameters": {
									"cw_folderPath": "FlightsAndWeather/@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"WindowStart": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T10:19:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_yw8')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_yw8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinewebact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy datato csv from web",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Jsonchallenge3_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "targetwebDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow webact",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy datato csv from web",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowchallengeweb",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcefromadls": {},
									"sinkweb": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Jsonchallenge3_ds')]",
				"[concat(variables('factoryId'), '/datasets/targetwebDS')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowchallengeweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinezip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binaryzip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BinarydestzipDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binaryzip')]",
				"[concat(variables('factoryId'), '/datasets/BinarydestzipDS')]"
			]
		}
	]
}